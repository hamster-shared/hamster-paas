package consts

import (
	"fmt"
	"strings"
)

const SecretKey = "93dfe293a9c897c795a7e4ee737e5734"

// status
const (
	PENDING = "Pending"
	SUCCESS = "Success"
	FAILED  = "Failed"
)

//const ConsumerAbi = "[\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracle\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"EmptyArgs\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"EmptySecrets\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"EmptySource\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"RequestIsAlreadyPending\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"RequestIsNotPending\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"SenderIsNotRegistry\",\n      \"type\": \"error\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"requestId\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes\",\n          \"name\": \"result\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes\",\n          \"name\": \"err\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"OCRResponse\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferRequested\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"id\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"RequestFulfilled\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"id\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"RequestSent\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"acceptOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"requestId\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"addSimulatedRequestId\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"enum Functions.Location\",\n              \"name\": \"codeLocation\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum Functions.Location\",\n              \"name\": \"secretsLocation\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum Functions.CodeLanguage\",\n              \"name\": \"language\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"string\",\n              \"name\": \"source\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"secrets\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"string[]\",\n              \"name\": \"args\",\n              \"type\": \"string[]\"\n            }\n          ],\n          \"internalType\": \"struct Functions.Request\",\n          \"name\": \"req\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"uint64\",\n          \"name\": \"subscriptionId\",\n          \"type\": \"uint64\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"gasLimit\",\n          \"type\": \"uint32\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"gasPrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"estimateCost\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint96\",\n          \"name\": \"\",\n          \"type\": \"uint96\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"source\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"secrets\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"enum Functions.Location\",\n          \"name\": \"secretsLocation\",\n          \"type\": \"uint8\"\n        },\n        {\n          \"internalType\": \"string[]\",\n          \"name\": \"args\",\n          \"type\": \"string[]\"\n        },\n        {\n          \"internalType\": \"uint64\",\n          \"name\": \"subscriptionId\",\n          \"type\": \"uint64\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"gasLimit\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"executeRequest\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getDONPublicKey\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"requestId\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"response\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"err\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"handleOracleFulfillment\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"latestError\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"latestRequestId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"latestResponse\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracle\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"updateOracleAddress\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]"

const (
	GitHub   = 1
	Metamask = 2
)

func ParseStatus(s string) (string, error) {
	switch strings.ToLower(s) {
	case "pending", "PENDING", "Pending":
		return "Pending", nil
	case "success", "SUCCESS", "Success":
		return "Success", nil
	case "failed", "FAILED", "Failed":
		return "Failed", nil
	default:
		return "Failed", fmt.Errorf("invalid status: #{s}", s)
	}
}

const (
	USD = 1
	RMB = 2
)
